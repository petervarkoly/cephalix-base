<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
  <general>
    <signature-handling>
      <accept_file_without_checksum config:type="boolean">true</accept_file_without_checksum>
      <accept_non_trusted_gpg_key config:type="boolean">true</accept_non_trusted_gpg_key>
      <accept_unknown_gpg_key config:type="boolean">true</accept_unknown_gpg_key>
      <accept_unsigned_file config:type="boolean">true</accept_unsigned_file>
      <accept_verification_failed config:type="boolean">true</accept_verification_failed>
      <import_gpg_key config:type="boolean">true</import_gpg_key>
    </signature-handling>
    <mode>
      <halt config:type="boolean">false</halt>
      <confirm config:type="boolean">false</confirm>
      <second_stage config:type="boolean">true</second_stage>
    </mode>
    <ask-list config:type="list">
 <!-- BEGIN Dialog 10 - Select the device & size -->
      <ask>
        <dialog config:type="integer">10</dialog>
        <element config:type="integer">0</element>
         <width config:type="integer">70</width>
         <height config:type="integer">20</height>
        <title>System Volume Configuration</title>
        <question>Select the system volume device</question>
        <help><![CDATA[
             <p><b>Device</b><br>Select the system volume device.</p>
]]></help>
        <pathlist config:type="list">
           <path>partitioning,0,device</path>
        </pathlist>
        <stage>initial</stage>
        <default>___DEVICELIST___</default>
           <script>
              <filename>root_dev_size.sh</filename>
              <rerun_on_error config:type="boolean">true</rerun_on_error>
              <environment config:type="boolean">true</environment>
              <source><![CDATA[
echo $VAL > /tmp/selected-device
]]>
              </source>
              <debug config:type="boolean">false</debug>
              <feedback config:type="boolean">true</feedback>
           </script>
      </ask>
     </ask-list>
  </general>
  <keyboard>
    <keymap>german</keymap>
  </keyboard>
  <language>
    <language>de_DE</language>
    <languages>de_DE</languages>
  </language>
  <timezone>
    <hwclock>UTC</hwclock>
    <timezone>Europe/Berlin</timezone>
  </timezone>
  <files config:type="list">
    <config_file>
      <file_path>/etc/openvpn/CEPHALIX.conf</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[client
dev tun
keepalive 10 30
persist-key
persist-tun
persist-local-ip
persist-remote-ip
comp-lzo
verb 4
mute 20
mute-replay-warnings
ca   /etc/ssl/servercerts/cacert.pem
cert /etc/ssl/servercerts/vpncert.pem
key  /etc/ssl/servercerts/vpnkey.pem
proto tcp
remote REPLACE-CEPHALIX 1194
nobind

]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/root/.ssh/authorized_keys</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>600</file_permissions>
      <file_contents><![CDATA[REPLACE-SSHKEY
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/cacert.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[REPLACE-CA-CERT
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/vpncert.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[REPLACE-VPN-CERT
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/vpnkey.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>640</file_permissions>
      <file_contents><![CDATA[REPLACE-VPN-KEY
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/certs/admin.REPLACE-dom.cert.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[REPLACE-ADMIN-CERT
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/certs/admin.REPLACE-dom.key.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>640</file_permissions>
      <file_contents><![CDATA[REPLACE-ADMIN-KEY
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/certs/schoolserver.REPLACE-dom.cert.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[REPLACE-SCHOOL-CERT
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/ssl/servercerts/certs/schoolserver.REPLACE-dom.key.pem</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>640</file_permissions>
      <file_contents><![CDATA[REPLACE-SCHOOL-KEY
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/sysconfig/schoolserver</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[########################################################################
## Path:           Network/Server
## Description:    Basic Configuration of the OSS
########################################################################

########################################################################
## Path:        Network/Server/Backup
## Description: Configuration of the OSS: Backup
########################################################################

## Type:	yesno
## Default:	no
# Make backup from the OSS.
SCHOOL_BACKUP="no"

## Type:	yesno
## Default:	no
# Set this variable to yes if your backup medium can not save file access control lists (ACLs).
SCHOOL_BACKUP_CAN_NOT_SAVE_ACL="no"

## Type:        string
## Default:
# Space separated list of custom scripts with full path which will be executed just before the command in SCHOOL_BACKUP_STOP_CMD.
SCHOOL_BACKUP_CUSTOM_SCRIPTS=""

## Type:	yesno
## Default:	yes
# Do we have to check if the backup directories are mounted.
SCHOOL_BACKUP_CHECK_MOUNT="yes"

## Type:	yesno
## Default:	yes
# Make backup from the ctool images and configuration.
SCHOOL_BACKUP_CTOOL="yes"

## Type:	yesno
## Default:	yes
# Make backup from the SQL databases.
SCHOOL_BACKUP_DB="yes"

## Type:	string
## Default:	
# The path to the directory of the full backup.
SCHOOL_BACKUP_FULL_DIR="/mnt/backup"

## Type:	yesno
## Default:	yes
# Make backup from /home.
SCHOOL_BACKUP_HOME="yes"

## Type:	string
## Default:	
# The path to the directory of the incremental backups.
SCHOOL_BACKUP_INC_DIR="/mnt/backup"

## Type:	yesno
## Default:	yes
# Make backup from mail system.
SCHOOL_BACKUP_MAIL="yes"

## Type:        string
## Default:
# Shell command to execute after the backup is stoped.
SCHOOL_BACKUP_STOP_CMD="umount /mnt/backup"


########################################################################
## Path:        Network/Server/Basis
## Description: Configuration of the OSS: Basis
########################################################################

## Type:        yesno readonly
## Default:     yes
# If the home directories should be sorted into role directories.
SCHOOL_SORT_HOMES="yes"

## Type:        string readonly
## Default:     "172.28.1.0/24"
# IP-network for new and not registered clients.
SCHOOL_ANON_DHCP_NET="REPLACE-anon-net"

## Type:	string readonly
## Default:	"172.16.1.1 172.16.1.25"
# IP-address range for new and not registered clients.
SCHOOL_ANON_DHCP_RANGE="REPLACE-anon"

## Type:	string readonly
## Default:	172.16.2.0
# The network address of the first school room.
SCHOOL_FIRST_ROOM_NET="REPLACE-room"

## Type:	string readonly
## Default:	"/home"
# Base of the school home directory.
SCHOOL_HOME_BASE="/home"

## Type:	yesno readonly
## Default:	yes
# This varibale shows if the OSS was configured as a gateway.
SCHOOL_ISGATE="yes"

## Type:	yesno readonly
## Default:	no
# Is this a demo version.
SCHOOL_IS_DEMO="no"

## Type:	string readonly
## Default:	"172.16.0.3"
# IP-address of the mail server and groupware of the OSS.
SCHOOL_MAILSERVER="REPLACE-mail"

## Type:	string
## Default:	Extis School
# The name of the school.
SCHOOL_NAME="REPLACE-CN"

## Type:	string readonly
## Default:	"255.255.0.0"
# Network Mask of the internal network.
SCHOOL_NETMASK="REPLACE-NM"

## Type:        string readonly
## Default:     "255.255.0.0"
# Network Mask of the internal network.
SCHOOL_NETMASK_STRING="REPLACE-NM-STRING"

## Type:	string readonly
## Default:	"172.16.0.0"
# Network Address of the internal network.
SCHOOL_NETWORK="REPLACE-NET"

## Type:	string readonly
## Default:	
# The default gateway for the internal net, not for the server.
SCHOOL_NET_GATEWAY="REPLACE-NET-GW"

## Type:	string readonly
## Default:	"172.16.0.4"
# IP-address of the print server of the OSS.
SCHOOL_PRINTSERVER="REPLACE-print"

## Type:	string readonly
## Default:	"172.16.0.5"
# IP-address of the proxy server of the OSS.
SCHOOL_PROXY="REPLACE-proxy"

## Type:	string readonly
## Default:	"172.16.0.6"
# IP-address of the backup server of the OSS.
SCHOOL_BACKUP_SERVER="REPLACE-backup"

## Type:	string readonly
## Default:	"172.16.0.2"
# IP-address of the admin server of the OSS.
SCHOOL_SERVER="REPLACE-admin"

## Type:	string readonly
## Default:	
# The default gateway of the server.
SCHOOL_SERVER_EXT_GW="REPLACE-GW"

## Type:	string readonly
## Default:	
# The external ip address of the server.
SCHOOL_SERVER_EXT_IP="REPLACE-TRIP"

## Type:	string readonly
## Default:	
# The netmask of the external ip address of the server.
SCHOOL_SERVER_EXT_NETMASK="REPLACE-TRNM"

## Type:	string readonly
## Default:	"172.16.0.0/24"
# The OSS server networks network address.
SCHOOL_SERVER_NET="REPLACE-NET/REPLACE-SERVER_NET_NM"

## Type:	yesno readonly
## Default:	no
# The OSS is the DHCP server in the internal network.
SCHOOL_USE_DHCP="yes"

## Type:	string readonly
## Default:	admin
# The windows netbios name of the OSS.
SCHOOL_NETBIOSNAME="admin"

## Type:	string(primary,secondary,real,gymnasium,work,other) readonly
## Default:	gymnasium
# The type of the school.
SCHOOL_TYPE="REPLACE-type"

## Type:	string readonly
## Default:	EXTIS
# The windows domain name of the school.
SCHOOL_WORKGROUP="REPLACE-WORKGROUP"

## Type:	string readonly
## Default:	"DE"
# Default langugage.
SCHOOL_LANGUAGE="DE"

## Type:	string readonly
## Default:	"DE"
# Default country code.
SCHOOL_CCODE="DE"

## Type:	string readonly
## Default:
# DNS Domain of the school.
SCHOOL_DOMAIN="REPLACE-dom"

## Type:        string readonly
## Default:     http://repo.cephalix.eu/salt-packages
# Url to the salt packages
SCHOOL_SALT_PKG_URL="http://repo.cephalix.eu/salt-packages"

## Type:        string readonly
## Default:     http://repo.cephalix.eu/OSS
# Url to the updates
SCHOOL_UPDATE_URL="http://repo.cephalix.eu"

########################################################################
## Path:        Network/Server/Settings
## Description: Configuration of the OSS: Settings
########################################################################

## Type:	yesno
## Default:	no
# Teachers have read rights in the home directories of  the students.
SCHOOL_TEACHER_OBSERV_HOME="no"

## Type:	yesno
## Default:     no
# When setting this variable to yes, the OSS scripts write debug information.
SCHOOL_DEBUG="no"

## Type:        yesno
## Default:     no
# To increase security you can reset the password for register every day.
SCHOOL_RESET_REGISTER_PASSWORD="no"

## Type:	string
## Default:
# This services have be monitored.
SCHOOL_MONITOR_SERVICES="amavis,apcupsd,cups,dhcpd,postfix,samba,squid"

## Type:	yesno
## Default:	no
# Set this variable to yes if you want to allow setting the same alias for more than one mailbox. This is the simpliest way to create "mailing lists".
SCHOOL_ALLOW_MULTIPLE_ALIASES="no"

## Type:	integer
## Default:	250
# The default file system quota for students in MB.
SCHOOL_FILE_QUOTA="250"

## Type:	integer
## Default:	1000
# The default file system quota for teachers in MB.
SCHOOL_FILE_TEACHER_QUOTA="1000"

## Type:	string
## Default:	
# The OSS group prefix. This charactes will be set for all group names.
SCHOOL_GROUP_PREFIX=""

## Type:	string
## Default:	
# The OSS login prefix. This charactes will be set for all login names.
SCHOOL_LOGIN_PREFIX=""

## Type:	string
## Default:	N4G4
# The OSS login creating scheme. I.e. how many characters will be taken from the Name and from the Givenname and from birth year. Birth year can only be Y4 or Y2.
SCHOOL_LOGIN_SCHEME="N4G4"

## Type:	integer
## Default:	5
# The default mail quota for students in MB.
SCHOOL_MAIL_QUOTA="5"

## Type:	integer
## Default:	25
# The default mail quota for teachers in MB.
SCHOOL_MAIL_TEACHER_QUOTA="25"

## Type:	string
## Default:	
# The registration code of the OSS.
SCHOOL_REG_CODE="REPLACE-REGCODE"

## Type:	yesno
## Default:	no
# Students may download at the admin web-site.
SCHOOL_STUDENTS_MAY_DOWNLOAD="no"

## Type:	yesno
## Default:	no
# Students may upload at the admin web-site.
SCHOOL_STUDENTS_MAY_UPLOAD="no"

## Type:	string
## Default:	
# The support email address.
SCHOOL_SUPPORT_MAIL_ADDRESS="oss-support@extis.de"

## Type:	yesno
## Default:     yes	
# If this variable is set to yes, students may login on more than one workstation.
SCHOOL_ALLOW_STUDENTS_MULTIPLE_LOGIN="no"

## Type:	yesno
## Default:     yes	
# If this variable is set to yes, users which are not students users may login on more than one workstation.
SCHOOL_ALLOW_MULTIPLE_LOGIN="yes"

## Type:        yesno
## Default:     yes
# If this variable is set to yes, some directories from the windows profiles will be moved to home.
# Documents Downloads Faworites Pictures Desktop Videos Music
SCHOOL_MOVE_PROFILE_TO_HOME="yes"

## Type:        yesno
## Default:     no
# Students may not change password.
SCHOOL_MAY_NOT_CHANGE_PASSWORD="no"

## Type:        integer(10:16)
## Default:     10
# Maximal lenght of password. Should not be graeter then 16 if you are using Office365.
SCHOOL_MAXIMAL_PASSWORD_LENGTH="16"

## Type:        integer(8:16)
## Default:     8
# Minimal lenght of password. Must not be less then 8 and graether then SCHOOL_MAXIMAL_PASSWORD_LENGTH.
SCHOOL_MINIMAL_PASSWORD_LENGTH="8"

## Type:        yesno
## Default:     yes
# Should the quality of the user passwort be checked for setting it? The minimal and maximal will be checked everytime.
SCHOOL_CHECK_PASSWORD_QUALITY="yes"

## Type:	string(telex,simple)
## Default:	telex
# How to convert UTF8 string to ASCII 7bit string. Telex: ue. Simple: u
SCHOOL_STRING_CONVERT_TYPE="telex"

## Type:	string
## Default:	all groups
# In which subdirectories in /home will be searched for files when deleting a user.
SCHOOL_SEARCH_FOR_DELETE="all groups"

]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/squid/acl_no_auth</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>644</file_permissions>
      <file_contents><![CDATA[.microsoft.com
.windowsupdate.com
.symantecliveupdate.com
.symantec.com
.web.de
suggestqueries.google.com
.amazon.de
.images-amazon.com
.antivir.de
.sun.com
.javafx.com
.mozilla.org
.mozilla.com
.mozilla.net
.msftncsi.com
.sjremetrics.java.com
ncbi.nlm.nih.gov
pubmed.gov
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/etc/nagios/nrpe.cfg</file_path>
      <file_owner>nagios:nagios</file_owner>
      <file_permissions>640</file_permissions>
      <file_contents><![CDATA[#############################################################################
# Sample NRPE Config File 
# Written by: Ethan Galstad (nagios@nagios.org)
# 
# Last Modified: 11-23-2007
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################


# LOG FACILITY
# The syslog facility that should be used for logging purposes.

log_facility=daemon



# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number.  The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.

pid_file=/var/run/nrpe/nrpe.pid



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=127.0.0.1



# NRPE USER
# This determines the effective user that the NRPE daemon should run as.  
# You can either supply a username or a UID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_user=nagios



# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.  
# You can either supply a group name or a GID.
# 
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

nrpe_group=nagios



# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames 
# that are allowed to talk to the NRPE daemon.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address.  I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

allowed_hosts=127.0.0.1,zadmin
 


# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed.  This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.  
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! *** 
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments

dont_blame_nrpe=1



# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario: 
# Execute restricted commmands using sudo.  For this to work, you need to add
# the nagios user to your /etc/sudoers.  An example entry for alllowing 
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password.  If you do this, make sure you don't give
# random users write access to that directory or its contents!

# command_prefix=/usr/bin/sudo 



# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60



# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.

connection_timeout=300



# WEEK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness

#allow_weak_random_seed=1



# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.

#include=<somefile.cfg>



# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

#include_dir=<somedirectory>
#include_dir=<someotherdirectory>



# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!  The examples below
# assume that you have plugins installed in a /usr/local/nagios/libexec
# directory.  Also note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!


# The following examples use hardcoded command arguments...

command[check_users]=/usr/lib/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib/nagios/plugins/check_load -w 15,10,5 -c 30,25,20
command[check_disk]=/usr/lib/nagios/plugins/check_all_partitions
command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 300 -c 500 
command[check_smb]=/usr/lib/nagios/plugins/check_smb -H localhost
command[check_dns]=/usr/lib/nagios/plugins/check_procs -C named -c 1:1
command[check_ldap]=/usr/lib/nagios/plugins/check_procs -C slapd -c 1:1
command[check_backup]=/usr/lib/nagios/plugins/check_backup
command[check_quotas]=/usr/lib/nagios/plugins/check_quotas


# The following examples allow user-supplied arguments and can
# only be used if the NRPE daemon was compiled with support for 
# command arguments *AND* the dont_blame_nrpe directive in this
# config file is set to '1'.  This poses a potential security risk, so
# make sure you read the SECURITY file before doing this.

#command[check_users]=/usr/lib/nagios/plugins/check_users -w "$ARG1$" -c "$ARG2$"
#command[check_load]=/usr/lib/nagios/plugins/check_load -w "$ARG1$" -c "$ARG2$"
#command[check_disk]=/usr/lib/nagios/plugins/check_disk -w "$ARG1$" -c "$ARG2$" -p "$ARG3$"
#command[check_procs]=/usr/lib/nagios/plugins/check_procs -w "$ARG1$" -c "$ARG2$" -s "$ARG3$"
]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/usr/lib/nagios/plugins/check_all_partitions</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>755</file_permissions>
      <file_contents><![CDATA[#!/bin/bash
IFS=$'\n'
ERROR=""
for i in $( mount )
do
	DEV=$( echo $i | gawk '{ print $1 }' )
	MP=$( echo $i | gawk '{ print $3 }' )
	if [ ${DEV/\/dev\//} = $DEV ]; then
		continue
	fi
	E=$( /usr/lib/nagios/plugins/check_disk -w 20% -c 10% -p $DEV )
	if [ ${E/DISK OK/} = $E ]; then
		ERROR="$ERROR $MP"
	fi
done

if [ -z "$ERROR" ]; then
	echo "DISK OK - All Partitions are OK"
	exit 0
fi
echo "DISK WARNING - $ERROR"
exit 1

]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/usr/lib/nagios/plugins/check_backup</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>755</file_permissions>
      <file_contents><![CDATA[#! /bin/sh


CONFIG=/etc/sysconfig/schoolserver
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=-1
#DATE=`date "+%b %d"`
CHECKFILE=/tmp/backup_check
CHECKWARNING=/tmp/backup_warn
CHECKMOUNT=/tmp/backup_mount
CHECKFIN=/tmp/backup_fin
#LASTLINE=$( tail --lines=1 /var/log/oss-backup.log )


#echo $DATE
#echo $CTIME
#echo $DIFF

. $CONFIG
if [ $SCHOOL_BACKUP = "no" ];then
	echo "OK: Kein Backup eingerichtet"
	exit $STATE_OK
else 

LASTLINE=$( tail --lines=1 /var/log/oss-backup.log )
DATE=`date +%s`
CTIME=`stat -c %Y '/var/log/oss-backup.log'`
DIFF=$(($DATE-$CTIME))

# Wenn backup aelter als 10 Tage (in sekunden) dann exit_Critical
if [ "$DIFF" -le 864000 ];then

	tail --lines=10 /var/log/oss-backup.log > $CHECKFILE

grep "WARNING" $CHECKFILE > $CHECKWARNING
grep "Unable to mount" $CHECKFILE > $CHECKMOUNT 
grep "Backup finished" $CHECKFILE > $CHECKFIN

	if [ -s $CHECKMOUNT ];then
		echo -n "CRITICAL: "
        	tail --lines=1  $CHECKMOUNT
        	exit $STATE_CRITICAL
	fi

	if [ -s $CHECKWARNING ];then 
		tail --lines=1  $CHECKWARNING
		exit $STATE_WARNING
	fi
	
	if [ -s $CHECKFIN ];then
        	echo "OK: Backup running fine: $LASTLINE"
        	exit $STATE_OK
	fi
else 
	echo "CRITICAL: BACKUP zu Alt"
	exit $STATE_CRITICAL
fi

fi

#if [ ! -e  "$CHECKFILE" ]; then
#        touch /var/log/oss-backup.log_check
#        cat "$LOGFILE" > "$CHECKFILE"
#fi
#
#comm -1 -3 "$LOGFILE" "$CHECKFILE" > "$DIFF"

##case 


]]></file_contents>
    </config_file>
    <config_file>
      <file_path>/usr/lib/nagios/plugins/check_quotas</file_path>
      <file_owner>root:root</file_owner>
      <file_permissions>755</file_permissions>
      <file_contents><![CDATA[#!/bin/bash
STATE=$( cat /var/adm/oss/check_quotas )
echo $STATE
 [ "$STATE" != "${STATE//Critical:}" ] && exit 2;
 [ "$STATE" != "${STATE//Warning:}" ]  && exit 1;
 [ "$STATE" != "${STATE//OK:}" ]       && exit 0;
echo "No quota check running"
exit -1;

]]></file_contents>
    </config_file>
  </files>
  <mail>
    <outgoing_mail_server>mailserver.REPLACE-dom</outgoing_mail_server>
    <connection_type config:type="symbol">permanent</connection_type>
  </mail>
  <networking>
    <dns>
      <dhcp_hostname config:type="boolean">false</dhcp_hostname>
      <dhcp_resolv config:type="boolean">false</dhcp_resolv>
      <domain>REPLACE-dom</domain>
      <hostname>schooladmin</hostname>
      <nameservers config:type="list">
        <nameserver>127.0.0.1</nameserver>
      </nameservers>
      <searchlist config:type="list">
        <search>REPLACE-dom</search>
      </searchlist>
    </dns>
    <interfaces config:type="list">
      <interface>
        <bootproto>static</bootproto>
        <device>eth0</device>
        <ipaddr>REPLACE-admin</ipaddr>
        <netmask>REPLACE-NM</netmask>
        <startmode>onboot</startmode>
      </interface>
      <interface>
        <bootproto>static</bootproto>
        <device>eth1</device>
        <ipaddr>REPLACE-TRIP</ipaddr>
        <netmask>REPLACE-TRNM</netmask>
        <startmode>onboot</startmode>
      </interface>
    </interfaces>
    <routing>
      <ip_forward config:type="boolean">false</ip_forward>
      <routes config:type="list">
        <route>
          <destination>default</destination>
          <device>-</device>
          <gateway>REPLACE-GW</gateway>
          <netmask>-</netmask>
        </route>
      </routes>
    </routing>
  </networking>
  <ntp-client>
    <configure_dhcp config:type="boolean">false</configure_dhcp>
    <peers config:type="list">
      <peer>
        <address>REPLACE-ntp</address>
        <options>iburst</options>
        <type>server</type>
      </peer>
    </peers>
    <start_at_boot config:type="boolean">true</start_at_boot>
    <start_in_chroot config:type="boolean">true</start_in_chroot>
  </ntp-client>
  <firewall>
    <FW_ALLOW_FW_BROADCAST_DMZ>no</FW_ALLOW_FW_BROADCAST_DMZ>
    <FW_ALLOW_FW_BROADCAST_EXT>no</FW_ALLOW_FW_BROADCAST_EXT>
    <FW_ALLOW_FW_BROADCAST_INT>no</FW_ALLOW_FW_BROADCAST_INT>
    <FW_DEV_EXT>eth1</FW_DEV_EXT>
    <FW_DEV_INT>eth0</FW_DEV_INT>
    <FW_IGNORE_FW_BROADCAST_DMZ>no</FW_IGNORE_FW_BROADCAST_DMZ>
    <FW_IGNORE_FW_BROADCAST_EXT>no</FW_IGNORE_FW_BROADCAST_EXT>
    <FW_IGNORE_FW_BROADCAST_INT>no</FW_IGNORE_FW_BROADCAST_INT>
    <FW_LOG_ACCEPT_ALL>no</FW_LOG_ACCEPT_ALL>
    <FW_LOG_ACCEPT_CRIT>yes</FW_LOG_ACCEPT_CRIT>
    <FW_LOG_DROP_ALL>no</FW_LOG_DROP_ALL>
    <FW_LOG_DROP_CRIT>yes</FW_LOG_DROP_CRIT>
    <enable_firewall config:type="boolean">true</enable_firewall>
    <start_firewall config:type="boolean">true</start_firewall>
  </firewall>
  <partitioning config:type="list">
    <drive>
      <disklabel>msdos</disklabel>
      <enable_snapshots config:type="boolean">true</enable_snapshots>
      <initialize config:type="boolean">true</initialize>
      <partitions config:type="list">
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <format config:type="boolean">false</format>
          <loop_fs config:type="boolean">false</loop_fs>
          <lvm_group>data</lvm_group>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">142</partition_id>
          <partition_nr config:type="integer">1</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>max</size>
          <subvolumes config:type="list"/>
        </partition>
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <format config:type="boolean">false</format>
          <loop_fs config:type="boolean">false</loop_fs>
          <lvm_group>system</lvm_group>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">142</partition_id>
          <partition_nr config:type="integer">2</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>105G</size>
          <subvolumes config:type="list"/>
        </partition>
      </partitions>
      <pesize/>
      <type config:type="symbol">CT_DISK</type>
      <use>all</use>
    </drive>
    <drive>
      <device>/dev/system</device>
      <disklabel>msdos</disklabel>
      <initialize config:type="boolean">true</initialize>
      <partitions config:type="list">
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <filesystem config:type="symbol">ext4</filesystem>
          <format config:type="boolean">true</format>
          <loop_fs config:type="boolean">false</loop_fs>
          <lv_name>root</lv_name>
          <mount>/</mount>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">131</partition_id>
          <partition_nr config:type="integer">1</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>100G</size>
          <subvolumes config:type="list"/>
        </partition>
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <filesystem config:type="symbol">swap</filesystem>
          <format config:type="boolean">true</format>
          <loop_fs config:type="boolean">false</loop_fs>
          <lv_name>swap</lv_name>
          <mount>swap</mount>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">130</partition_id>
          <partition_nr config:type="integer">2</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>2G</size>
          <subvolumes config:type="list"/>
        </partition>
      </partitions>
      <pesize/>
      <type config:type="symbol">CT_LVM</type>
      <use>all</use>
    </drive>
    <drive>
      <device>/dev/data</device>
      <disklabel>msdos</disklabel>
      <initialize config:type="boolean">true</initialize>
      <partitions config:type="list">
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <filesystem config:type="symbol">xfs</filesystem>
          <format config:type="boolean">true</format>
          <loop_fs config:type="boolean">false</loop_fs>
          <lv_name>srv</lv_name>
          <mount>/srv</mount>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">131</partition_id>
          <partition_nr config:type="integer">1</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>40%</size>
          <subvolumes config:type="list"/>
        </partition>
        <partition>
          <create config:type="boolean">true</create>
          <crypt_fs config:type="boolean">false</crypt_fs>
          <filesystem config:type="symbol">xfs</filesystem>
          <format config:type="boolean">true</format>
              <fstopt>defaults,uquota</fstopt>
          <loop_fs config:type="boolean">false</loop_fs>
          <lv_name>home</lv_name>
          <mount>/home</mount>
          <mountby config:type="symbol">device</mountby>
          <partition_id config:type="integer">131</partition_id>
          <partition_nr config:type="integer">2</partition_nr>
          <pool config:type="boolean">false</pool>
          <raid_options/>
          <resize config:type="boolean">false</resize>
          <size>max</size>
          <subvolumes config:type="list"/>
        </partition>
      </partitions>
      <pesize/>
      <type config:type="symbol">CT_LVM</type>
      <use>all</use>
    </drive>
  </partitioning>
  <scripts>
    <pre-scripts>
      <script>
        <feedback config:type="boolean">false</feedback>
        <debug config:type="boolean">true</debug>
        <interpreter>perl</interpreter>
        <filename>30_disk_evaluating.sh</filename>
        <source><![CDATA[
my %mlmap = (); # hash to identify members of multipath devices
my %iscd  = (); # hash to identify cdroms
my $mdisk = {}; # hash for multipath disks

sub sortHarddisks {
    my $disk = shift;
    my @a = sort { $disk->{$a}->{size} <=> $disk->{$b}->{size} } ( keys %$disk );
    return @a;
}

sub isUSB {
    my $device = shift;
    return !system("grep $device /tmp/list-of-usb-devices > /dev/null");
}

sub Debug {
        my $t = shift;
        print time().":$t\n";
}

my $SWAP=`cat /tmp/swap_size`; chomp $SWAP;
$SWAP=int($SWAP/1024);
my $LVG_DEV_SIZE=$SWAP+70;
my $MIN_LVG_DEV_SIZE=$SWAP+10;

#Debug("Create List of USB devices");
system("hwinfo --usb > /tmp/list-of-usb-devices");

#Debug("Start Loading dm-multipath");
system("/sbin/modprobe dm-multipath");

#Debug("Starting multipath");
system("multipath");

#Debug("Calling dmsetup");
my $multipath = `dmsetup status --target multipath`;

#Debug("Start evaluate if we have multipath");
my $having_multipath = 0;
foreach ( split /\n/, $multipath )
{
        if( /([a-f0-9]+): \d (\d+).* \d+:\d+.* \d+:\d+/ )
        {
                my $d = $1;
                $mdisk->{"/dev/mapper/$1"}->{size}  = $2;
                $mdisk->{"/dev/mapper/$1"}->{model} = 'Multipath';
                while( /(\d+:\d+)/g )
                {
                        $mlmap{$1} = $d;
                }
                $having_multipath = 1;
        }
        elsif( /([a-f0-9]+): \d (\d+).* (\d+:\d+)/ )
        {
                $mlmap{$3} = $1;
                $mdisk->{"/dev/mapper/$1"}->{size}  = $2;
                $mdisk->{"/dev/mapper/$1"}->{model} = 'Multipath';
        }
}
if( ! $having_multipath )
{
        #Debug("We do not have multipath");
        %mlmap = ();
        $mdisk = {};
        system("dmsetup remove_all --force &> /dev/null;");
}

#Debug("Start hwinfo --disk");
my $hardware = `hwinfo --disk`;
#Debug("Evaluate hwinfo");
foreach ( split( "\n\n", $hardware ) )
{
        if( /([a-f0-9]+): \d (\d+).* \d+:\d+.* \d+:\d+/ )
        {
                my $d = $1;
                $mdisk->{"/dev/mapper/$1"}->{size}  = $2;
                $mdisk->{"/dev/mapper/$1"}->{model} = 'Multipath';
                while( /(\d+:\d+)/g )
                {
                        $mlmap{$1} = $d;
                }
                $having_multipath = 1;
        }
        elsif( /([a-f0-9]+): \d (\d+).* (\d+:\d+)/ )
        {
                $mlmap{$3} = $1;
                $mdisk->{"/dev/mapper/$1"}->{size}  = $2;
                $mdisk->{"/dev/mapper/$1"}->{model} = 'Multipath';
        }
}
if( ! $having_multipath )
{
        #Debug("We do not have multipath");
        %mlmap = ();
        $mdisk = {};
        system("dmsetup remove_all --force &> /dev/null;");
}

#Debug("Start hwinfo --disk");
my $hardware = `hwinfo --disk`;
#Debug("Evaluate hwinfo");
foreach ( split( "\n\n", $hardware ) )
{
        my ( $d ) = ( /Device File: (\S+)/ );
        next if ( ! defined $d );
        next if( isUSB( $d ) );
        my  $cd   = /Device Files: .*\/dev\/cdrom/ || 0;
        next if $cd;
        my ( $s ) = ( /Size: (\d+)/ );
        next if ( ! defined $s );
        my ( $m ) = ( /Model: (.*)/ );
        my ( $n ) = ( /Device Number: block (\d+:\d+)/ );
        if( !defined $mlmap{$n} )
        {
                $mdisk->{$d}->{size}  = $s;
                $mdisk->{$d}->{model} = $m;
        }
        else
        {
                $mdisk->{'/dev/mapper/'.$mlmap{$n}}->{size}  = $s;
                $mdisk->{'/dev/mapper/'.$mlmap{$n}}->{model} = $m." via Multipath";
        }
}
#Debug("Sort disk list");
my @sortDisk = sortHarddisks($mdisk);

open(FILE,   ">  /tmp/harddisk-sizes") || die("can't open datafile: $!");
my $HD_SIZE   ='';
my $DEVICELIST='<selection config:type="list">';
#Debug("Creating disk list in xml");
foreach my $d ( @sortDisk ) {
        $mdisk->{$d}->{size} = int( $mdisk->{$d}->{size}/2/1024/1024 );
        $HD_SIZE = $mdisk->{$d}->{size};
        my $m    = $mdisk->{$d}->{model};
        $DEVICELIST.= "<entry><value>$d</value><label>$d: $HD_SIZE GB: $m</label></entry>";
        print FILE $d.' '.$mdisk->{$d}->{size}."\n";
}
$DEVICELIST .= '</selection>';
close(FILE);

#Debug("Search a root device which is large enough");
my $LVG_DEVICE=0;
foreach my $d ( @sortDisk ) {
        next if( $mdisk->{$d}->{size} < $LVG_DEV_SIZE );
        $LVG_DEVICE=$d;
        $DEVICELIST.= "<default>$d</default>";
        last;
}

if( ! $LVG_DEVICE )
{
        #Debug("No root device was found");
        my $NEWSWAP = $mdisk->{$sortDisk[0]}->{size}-10;
        $LVG_DEV_SIZE=$mdisk->{$sortDisk[0]}->{size}-1;
        $MIN_LVG_DEV_SIZE=$mdisk->{$sortDisk[0]}->{size}-26;
        $HD_SIZE=$mdisk->{$sortDisk[0]}->{size};
        $DEVICELIST.= "<default>".$sortDisk[0]."</default>";

        if( $NEWSWAP < 2 )
        {
                print "Your system does not meet the minimal requirements for a SAP installation\n";
                print "Adapt the partition sizes to your individual requirements!\n";
                print "Proceed on your own risc with the installation.\n";
        }
        else
        { 
                print "Your system does not meet the requirements made in SAP note 1984787..\n";
                print "Instead of the required $SWAP GB swap size $NEWSWAP GB will be created.\n";
        }

        $SWAP=$NEWSWAP;
}

my $HD_COUNT=scalar(@sortDisk);

#Debug("Writing the xml file");
open(FILE,   "<  /tmp/profile/autoinst.xml") || die("can't open datafile: $!");
my @file = <FILE>;
close(FILE);
my $file = join( "", @file );
$file =~ s#<default>___DEVICELIST___</default>#$DEVICELIST#;
$file =~ s/___LVG_DEV_SIZE___/$LVG_DEV_SIZE/g;
$file =~ s/___MIN_LVG_DEV_SIZE___/$MIN_LVG_DEV_SIZE/g;
$file =~ s/___HD_COUNT___/$HD_COUNT/g;
$file =~ s/___HD_SIZE___/$HD_SIZE/g;
$file =~ s/___SWAP___/$SWAP/g;

open(FILE,   ">  /tmp/profile/modified.xml") || die("can't open datafile: $!");
print FILE $file;
close(FILE);
#Debug("The work is done.");

]]></source>
      </script>
    </pre-scripts>
    <chroot-scripts config:type="list">
      <script>
        <feedback config:type="boolean">true</feedback>
        <debug config:type="boolean">false</debug>
        <filename>make-dir.sh</filename>
        <source><![CDATA[
mkdir -p /mnt/etc/ssl/servercerts/certs
]]></source>
      </script>
    </chroot-scripts>
    <post-scripts config:type="list">
    </post-scripts>
    <init-scripts config:type="list">
      <script>
        <debug config:type="boolean">true</debug>
        <filename>init-setup.sh</filename>
        <source><![CDATA[#!/bin/sh
echo "IPADDR_mail='REPLACE-mail/REPLACE-BIT'
LABEL_mail='mail'
IPADDR_print='REPLACE-print/REPLACE-BIT'
LABEL_print='print'
IPADDR_proxy='REPLACE-proxy/REPLACE-BIT'
LABEL_proxy='proxy'
 " >> /etc/sysconfig/network/ifcfg-eth0

rcnetwork restart
echo -n 'REPLACE-PW' > /root/passwd
chmod 600 /root/passwd

sleep 10
sed -i s/DHCPD_INTERFACE=""/DHCPD_INTERFACE="eth0"/ /etc/sysconfig/dhcpd
/usr/share/oss/setup/oss_setup.pl --dhcp --dns --mail --samba --proxy --accounts --debug --ldappasswd=/root/passwd
echo 'REPLACE-zadmin zadmin' >> /etc/hosts

#Adapt APACHE configuration

#Allow Cephalix all access
sed -i 's/^FW_TRUSTED_NETS=.*/FW_TRUSTED_NETS="REPLACE-zadmin REPLACE-CEPHALIX"/' /etc/sysconfig/SuSEfirewall2

REPLACE-CEPHALIX-PW

#Install some late packages:
zypper -n install oss-clone oss-clax oss-nagios nagios-nrpe

#Activate some services
chkconfig nagios on
chkconfig nrpe on
chkconfig openvpn on
rcopenvpn start

#Some correctures
chown nagios /var/lib/nagios

]]></source>
      </script>
    </init-scripts>
  </scripts>
  <software>
    <patterns config:type="list">
      <pattern>base</pattern>
      <pattern>x11</pattern>
      <pattern>xfce</pattern>
      <pattern>sw_management</pattern>
    </patterns>
    <packages config:type="list">
      <package>at</package>
      <package>apache2</package>
      <package>dhcp-server</package>
      <package>icinga2</package>
      <package>icingaweb2</package>
      <package>mc</package>
      <pacakge>mariadb</pacakge>
      <pacakge>mariadb-client</pacakge>
      <pacakge>mariadb-errormessages</pacakge>
      <package>oss-base</package>
      <package>salt</package>
      <package>salt</package>
      <package>salt-api</package>
      <package>salt-bash-completion</package>
      <package>salt-doc</package>
      <package>salt-master</package>
      <package>tftp</package>
      <package>vsftpd</package>
      <package>xinetd</package>
      <package>xfsprogs</package>
      <package>yast2-oss-setup</package>
      <package>yast2-firstboot</package>
   </packages>
  </software>
  <services-manager>
    <default_target>graphical</default_target>
    <services>
      <disable config:type="list">
      </disable>
      <enable config:type="list">
        <service>apache2</service>
        <service>cups</service>
        <service>oss-api</service>
        <service>salt</service>
        <service>salt-master</service>
        <service>salt-api</service>
        <service>sshd</service>
      </enable>
    </services>
  </services-manager>
  <users config:type="list">
    <user>
      <username>root</username>
      <user_password>REPLACE-PW</user_password>
      <encrypted config:type="boolean">false</encrypted>
      <forename/>
      <surname/>
    </user>
  </users>
</profile>
